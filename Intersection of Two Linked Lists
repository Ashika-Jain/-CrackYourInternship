class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        ListNode* slow1 = headA;
        ListNode* fast1 = headA;
        ListNode* slow2 = headB;
        ListNode* fast2 = headB;

        while(fast1 && fast2 && fast1->next && fast2->next){
            if(slow1 == slow2)
                return slow1;
            
            fast1 = fast1->next->next;
            slow1 = slow1->next;
            fast2 = fast2->next->next;
            slow2 = slow2->next;
            
            
        }
      if(fast1 == NULL || fast1->next == nullptr) {
        while(slow2){
            if(slow1 == slow2){
                return slow1;
            }
            else{
                slow2= slow2->next;
            }
        }
      }
      if(fast2 == NULL || fast2->next == nullptr) {
        while(slow1){
            if(slow1 == slow2){
                return slow2;
            }
            else{
                slow1= slow1->next;
            }
        }
      }

      return NULL;  
    }
};
